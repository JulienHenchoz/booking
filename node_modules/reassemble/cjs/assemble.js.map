{"version":3,"sources":["assemble.tsx"],"names":[],"mappings":"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","file":"assemble.js","sourcesContent":["import * as React from \"react\";\nimport { ComponentClass, Component } from \"react\";\n\nimport { ReactComponent, ReactAnyComponent, ComponentEnhancer } from \"./types\";\nimport {\n  createBlueprint, InstanceCallbackListTypesafe, StateUpdater, LifeCycleCallbackTypes,\n  Blueprint, InstanceCallbackEntry, ComponentCallbacks,\n} from \"./blueprint\";\nimport getDisplayName from \"./utils/getDisplayName\";\nimport getUniqueKey from \"./utils/getUniqueKey\";\nimport isReferentiallyTransparentFunctionComponent from \"./utils/isReferentiallyTransparentFunctionComponent\";\n\ntype ComponentData = {\n  props: any,\n  context: any,\n  component: ReactAnyComponent,\n  childContext?: any,\n  lifeCycleCallbacks?: {[P in keyof LifeCycleCallbackTypes]: Function[]} & { [name: string]: Function[] },\n};\n\ntype StateCallbackEntry = InstanceCallbackEntry<\"stateCallback\"> & {\n  init?: ComponentData,\n  called?: boolean,\n  startAt?: number,\n};\n\ntype ComponentWillReceivePropsCallbackkEntry = InstanceCallbackEntry<\"componentWillReceivePropsCallback\"> & {\n  called?: boolean,\n};\n\ntype PendingDataUpdate = {\n  dirty?: boolean,\n  init?: ComponentData,\n  startAt?: number,\n  callbacks?: SetStateCallback[],\n};\n\ntype SetStateCallback = () => void;\n\nconst hasWillReceivePropsCallback = (e: InstanceCallbackEntry<any>) => e.kind === \"componentWillReceivePropsCallback\";\n\nclass AssemblyBase<T> extends Component<T, any> {\n  private target: ReactComponent<any> | string;\n  private isReferentiallyTransparent: boolean;\n  private callbackList: InstanceCallbackListTypesafe;\n  private hasWillReceivePropsCallback: boolean;\n  private computed: ComponentData;\n  private pendingDataUpdate: PendingDataUpdate = false;\n  private newestProps: any;\n  private newestContext: any;\n  private newestState: any = {};\n  private unmounted = false;\n\n  constructor(\n    blueprint: Blueprint,\n    target: ReactComponent<any> | string,\n    isReferentiallyTransparent: boolean,\n    props: any,\n    context: any,\n  ) {\n    super(props, context);\n    this.newestProps = props;\n    this.newestContext = context;\n    this.isReferentiallyTransparent = isReferentiallyTransparent;\n    this.target = target;\n    this.callbackList = blueprint.instanceCallbacks();\n    this.hasWillReceivePropsCallback = this.callbackList.some(hasWillReceivePropsCallback);\n    this.computed = this.runInstanceCallbacks({ props, context, component: this.target });\n    this.state = this.newestState;\n  }\n\n  public getChildContext() { return this.computed.childContext; }\n  public componentWillMount() { return this.runLifeCycleCallbacks(\"componentWillMountCallback\"); }\n  public componentDidMount() { return this.runLifeCycleCallbacks(\"componentDidMountCallback\"); }\n  public componentWillUnmount() {\n    this.unmounted = true;\n    return this.runLifeCycleCallbacks(\"componentWillUnmountCallback\");\n  }\n  public componentWillUpdate() { return this.runLifeCycleCallbacks(\"componentWillUpdateCallback\"); }\n  public componentDidUpdate() { return this.runLifeCycleCallbacks(\"componentDidUpdateCallback\"); }\n  public componentWillReceiveProps(nextProps: any, nextContext: any) {\n    this.newestProps = nextProps;\n    this.newestContext = nextContext;\n    this.handleDataUpdate({\n      props: nextProps,\n      context: nextContext,\n      component: this.target,\n    });\n  }\n\n  public shouldComponentUpdate(nextProps: any, nextState: any, nextContext: any) {\n    if (this.state !== nextState && !this.hasWillReceivePropsCallback) {\n      // State based props was not computed before, do it now.\n      this.handleDataUpdate({\n        props: nextProps,\n        context: nextContext,\n        component: this.target,\n      });\n    }\n    const callbacks = this.computed.lifeCycleCallbacks.shouldComponentUpdateCallback;\n    if (callbacks) {\n      for (let i = 0; i < callbacks.length; i++) {\n        if (!callbacks[i]()) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  public render() {\n    const {component: Component, props} = this.computed;\n    if (!Component) {\n      return null;\n    }\n    if (\n      Component === this.target && this.isReferentiallyTransparent ||\n      isReferentiallyTransparentFunctionComponent(Component)\n    ) {\n      return (Component as any)(props);\n    }\n    return <Component {...props} />;\n  }\n\n  private runLifeCycleCallbacks(name: keyof LifeCycleCallbackTypes) {\n    const callbacks = this.computed.lifeCycleCallbacks[name];\n    if (callbacks) { callbacks.forEach((cb) => cb()); }\n  }\n\n  private applyStateDiff(stateDiff: any) {\n    this.newestState = { ...this.newestState, ...stateDiff };\n  }\n\n  private setStateWithLifeCycle(\n    stateDiff: any,\n    callback: SetStateCallback,\n    init: ComponentData = this.defaultInit,\n    startAt: number = 0,\n  ) {\n    if (this.pendingDataUpdate) {\n      // we are in the middle of a data update.\n      if (!this.pendingDataUpdate.dirty || startAt < this.pendingDataUpdate.startAt) {\n        this.pendingDataUpdate.dirty = true;\n        this.pendingDataUpdate.init = init;\n        this.pendingDataUpdate.startAt = startAt;\n      }\n      if (callback) {\n        this.pendingDataUpdate.callbacks.push(callback);\n      }\n      this.applyStateDiff(stateDiff);\n    } else if (this.hasWillReceivePropsCallback) {\n      // runs callbacks with the new state which will run the `componentWillReceiveProps` lifecycle\n      this.handleDataUpdate(init, startAt, stateDiff, callback);\n    } else {\n      // state changes are batched and props will be recalculated in `shouldComponentUpdate`.\n      this.applyStateDiff(stateDiff);\n      this.setState(this.newestState, callback);\n    }\n  }\n\n  private get defaultInit(): ComponentData {\n    return {\n      props: this.newestProps,\n      context: this.newestContext,\n      component: this.target,\n    };\n  }\n\n  private handleDataUpdate(\n    init: ComponentData = this.defaultInit,\n    startAt: number = 0,\n    stateDiff: any = {},\n    callback: SetStateCallback = null,\n  ) {\n    const oldState = this.newestState;\n    if (stateDiff) {\n      this.applyStateDiff(stateDiff);\n    }\n    this.pendingDataUpdate = { callbacks: callback ? [callback] : [] };\n    this.computed = this.runInstanceCallbacks(init, startAt);\n    const callbacks = this.pendingDataUpdate.callbacks;\n    this.pendingDataUpdate = null;\n\n    if (this.newestState !== oldState) {\n      // Component could be unmounted because something during the lifecycle call can\n      // cause a parent component to unmount this before it completed its data update.\n      if (!this.unmounted) {\n        this.setState(this.newestState, () => callbacks.forEach((cb) => cb()));\n      }\n    }\n  }\n\n  private runInstanceCallbacks(init: ComponentData, startAt = 0): ComponentData {\n    const interim = { ...init };\n    if (!interim.lifeCycleCallbacks) { interim.lifeCycleCallbacks = {}; }\n    for (let idx = startAt; idx < this.callbackList.length; idx++) {\n      const entry = this.callbackList[idx];\n      switch (entry.kind) {\n        case \"propsCallback\":\n          interim.props = entry.callback(interim.props, this.newestState, interim.context);\n          break;\n        case \"stateCallback\":\n          {\n            const sc = entry as StateCallbackEntry;\n            if (this.hasWillReceivePropsCallback) {\n              sc.init = { ...interim };\n              sc.startAt = idx;\n            }\n            if (!sc.called) {\n              sc.called = true;\n              const initState = (name: string, value: any) => {\n                let unique = getUniqueKey(name, this.newestState);\n                this.applyStateDiff({ [unique]: value });\n                const updater: StateUpdater<any> = (val, callback) => {\n                  this.setStateWithLifeCycle({ [unique]: val }, callback, sc.init, sc.startAt);\n                };\n                return { name: unique, updater };\n              };\n              entry.callback(initState, interim.props, this.newestState, interim.context);\n            }\n          }\n          break;\n        case \"childContextCallback\":\n          interim.childContext = entry.callback(interim.childContext, interim.props, this.newestState, interim.context);\n          break;\n        case \"skipCallback\":\n          idx += entry.callback(interim.props, this.newestState, interim.context);\n          break;\n        case \"renderCallback\":\n          interim.component = entry.callback(interim.component, interim.props, this.newestState, interim.context);\n          break;\n        case \"lazyLoadCallback\":\n          const list = entry.callback(interim.props, this.newestState, interim.context);\n          if (list && list.length > 0) {\n            this.callbackList = [...this.callbackList.slice(0, idx + 1), ...list, ...this.callbackList.slice(idx + 1)];\n            if (!this.hasWillReceivePropsCallback) {\n              this.hasWillReceivePropsCallback = list.some(hasWillReceivePropsCallback);\n            }\n          }\n          break;\n        case \"componentWillReceivePropsCallback\":\n          {\n            const cc = entry as ComponentWillReceivePropsCallbackkEntry;\n            const callback = entry.callback(interim.props, this.newestState, interim.context);\n            if (cc.called && this.pendingDataUpdate) {\n              // Props changed so we need to run this lifecycle.\n              callback();\n              if (this.pendingDataUpdate.dirty) {\n                // State changed during lifecycle, so we need to recalculated from an earlier position.\n                this.pendingDataUpdate.dirty = false;\n                return this.runInstanceCallbacks(this.pendingDataUpdate.init, this.pendingDataUpdate.startAt);\n              }\n            } else {\n              cc.called = true;\n            }\n          }\n          break;\n        case \"componentWillMountCallback\":\n        case \"componentDidMountCallback\":\n        case \"componentWillUnmountCallback\":\n        case \"shouldComponentUpdateCallback\":\n        case \"componentWillUpdateCallback\":\n        case \"componentDidUpdateCallback\":\n          {\n            const hasCallbacks = interim.lifeCycleCallbacks[entry.kind] !== undefined;\n            const callback = entry.callback(interim.props, this.newestState, interim.context);\n            interim.lifeCycleCallbacks = {\n              ...interim.lifeCycleCallbacks,\n              [entry.kind]: hasCallbacks\n                ? [...interim.lifeCycleCallbacks[entry.kind], callback]\n                : [callback],\n            };\n          }\n          break;\n        default:\n          throw new Error(`Unknown callback entry '${(entry as any).kind}'`);\n      }\n    }\n    return interim;\n  }\n}\n\nexport function assemble(...callbacks: ComponentCallbacks[]): ComponentEnhancer<any, any>;\nexport function assemble<TInner, TOuter>(...callbacks: ComponentCallbacks[]): ComponentEnhancer<TInner, TOuter>;\nexport function assemble<TInner, TOuter>(...callbacks: ComponentCallbacks[]): ComponentEnhancer<TInner, TOuter> {\n  const blueprint = createBlueprint(...callbacks);\n  return (target: ReactComponent<TInner>) => {\n    const isReferentiallyTransparent = isReferentiallyTransparentFunctionComponent(target);\n    const targetName = getDisplayName(target);\n    const assembled: ComponentClass<TOuter> = class extends AssemblyBase<TOuter> {\n      public static displayName = isReferentiallyTransparent\n        ? targetName\n        : `Assembled(${targetName})`;\n\n      constructor(props: any, context: any) {\n        super(blueprint, target, isReferentiallyTransparent, props, context);\n      }\n    };\n    blueprint.staticCallbacks.forEach((cb) => cb(assembled, target));\n    return assembled;\n  };\n}\n\nexport default assemble;\n"]}