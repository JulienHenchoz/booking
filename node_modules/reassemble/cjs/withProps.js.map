{"version":3,"sources":["withProps.ts"],"names":[],"mappings":";;;;;;;;;AAEA,uCAAkC;AAClC,qDAAgD;AAUhD,mBACE,WAAoD;IAEpD,MAAM,CAAC,kBAAQ,CAAC,UAAC,KAAK,IAAK,OAAA,cACtB,KAAK,EACL,sBAAY,CAAM,WAAW,EAAE,KAAK,CAAC,EACxC,EAHyB,CAGzB,CAAC,CAAC;AACN,CAAC;AAPD,8BAOC;;AAED,kBAAe,SAAS,CAAC","file":"withProps.js","sourcesContent":["import { Composable } from \"./blueprint\";\nimport { Mapper } from \"./types\";\nimport mapProps from \"./mapProps\";\nimport resolveValue from \"./utils/resolveValue\";\n\nexport function withProps(\n  createProps: Object | Mapper<any, any>,\n): Composable;\n\nexport function withProps<TPropsIn, TPropsOut>(\n  createProps: TPropsOut | Mapper<TPropsIn, TPropsOut>,\n): Composable;\n\nexport function withProps<TPropsIn, TPropsOut>(\n  createProps: TPropsOut | Mapper<TPropsIn, TPropsOut>,\n): Composable {\n  return mapProps((props) => ({\n    ...props,\n    ...resolveValue<any>(createProps, props),\n  }));\n}\n\nexport default withProps;\n"]}