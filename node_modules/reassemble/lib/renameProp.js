var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
import mapProps from "./mapProps";
import omit from "./utils/omit";
export function renameProp(oldName, newName) {
    return mapProps(function (props) {
        return (__assign({}, omit(props, oldName), (_a = {}, _a[newName] = props[oldName], _a)));
        var _a;
    });
}
export default renameProp;

//# sourceMappingURL=renameProp.js.map
