{"version":3,"sources":["getContext.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,EAAc,aAAa,EAAE,MAAM,aAAa,CAAC;AACxD,OAAO,IAAI,MAAM,cAAc,CAAC;AAEhC,MAAM,qBACJ,YAAe;IAEf,MAAM,CAAC;QACL,cAAc,EAAE,UAAC,cAAc;YAC7B,cAAc,CAAC,YAAY,gBACtB,cAAc,CAAC,YAAY,EAC1B,YAAoB,CACzB,CAAC;QACJ,CAAC;QACD,iBAAiB,EAAE;YACjB,aAAa,CAAC,UAAC,KAAK,EAAE,CAAC,EAAE,OAAO,IAAK,OAAA,cAChC,KAAK,EACL,IAAI,gBAAC,OAAO,SAAK,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAC7C,EAHmC,CAGnC,CAAC;SACJ;KACF,CAAC;AACJ,CAAC;AAED,eAAe,UAAU,CAAC","file":"getContext.js","sourcesContent":["import { Composable, propsCallback } from \"./blueprint\";\nimport pick from \"./utils/pick\";\n\nexport function getContext<T>(\n  contextTypes: T,\n): Composable {\n  return {\n    staticCallback: (componentClass) => {\n      componentClass.contextTypes = {\n        ...componentClass.contextTypes,\n        ...(contextTypes as any),\n      };\n    },\n    instanceCallbacks: [\n      propsCallback((props, _, context) => ({\n        ...props,\n        ...pick(context, ...Object.keys(contextTypes)),\n      })),\n    ],\n  };\n}\n\nexport default getContext;\n"]}