var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
import { propsCallback } from "./blueprint";
import pick from "./utils/pick";
import shallowEqual from "./utils/shallowEqual";
export function withPropsOnChange(shouldMapOrKeys, propsMapper) {
    var shouldMap = typeof shouldMapOrKeys === "function"
        ? shouldMapOrKeys
        : function (props, nextProps) { return !shallowEqual(pick.apply(void 0, [props].concat(shouldMapOrKeys)), pick.apply(void 0, [nextProps].concat(shouldMapOrKeys))); };
    return {
        instanceCallbacks: function () {
            var previousProps;
            var computedProps;
            return [
                propsCallback(function (props) {
                    if (previousProps === undefined || shouldMap(previousProps, props)) {
                        computedProps = propsMapper(props);
                    }
                    previousProps = props;
                    return __assign({}, props, computedProps);
                }),
            ];
        },
    };
}
export default withPropsOnChange;

//# sourceMappingURL=withPropsOnChange.js.map
