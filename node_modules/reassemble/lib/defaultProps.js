var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
import mapProps from "./mapProps";
import getKeysAndSymbols from "./utils/getKeysAndSymbols";
export function defaultProps(defaults) {
    return mapProps(function (props) { return (__assign({}, getKeysAndSymbols(defaults).reduce(function (nextProps, key) {
        if (nextProps[key] === undefined) {
            nextProps[key] = defaults[key];
        }
        return nextProps;
    }, __assign({}, props)))); });
}
export default defaultProps;

//# sourceMappingURL=defaultProps.js.map
