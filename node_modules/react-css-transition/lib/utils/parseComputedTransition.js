import parseDuration from "./parseDuration";
export function parseComputedTransition(computed) {
    var lastProperty = null;
    var firstProperty = null;
    var lastPropertyTotalDuration = -1;
    var firstPropertyDelay = 99999999;
    var properties = computed.transitionProperty.split(/\s*,\s*/);
    var delays = computed.transitionDelay.split(/\s*,\s*/);
    var durations = computed.transitionDuration.split(/\s*,\s*/);
    properties.forEach(function (property, i) {
        var duration = parseDuration(durations[i]);
        var delay = parseDuration(delays[i]);
        var totalDuration = duration + delay;
        if (totalDuration > lastPropertyTotalDuration) {
            lastPropertyTotalDuration = totalDuration;
            lastProperty = { property: property, duration: duration, delay: delay };
        }
        if (delay < firstPropertyDelay) {
            firstPropertyDelay = delay;
            firstProperty = { property: property, duration: duration, delay: delay };
        }
    });
    return [firstProperty, lastProperty];
}
export default parseComputedTransition;

//# sourceMappingURL=parseComputedTransition.js.map
