{"version":3,"sources":["utils/matchTransitionProperty.ts"],"names":[],"mappings":";AAAA,2DAAsD;AAEtD,iCAAwC,OAAe,EAAE,QAAgB;IACvE,EAAE,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACD,IAAM,GAAG,GAAG,4BAAkB,CAAC,OAAO,CAAC,CAAC;IACxC,IAAM,IAAI,GAAG,4BAAkB,CAAC,QAAQ,CAAC,CAAC;IAC1C,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACtC,MAAM,CAAC,GAAG,KAAK,IAAI,CAAC;IACtB,CAAC;IACD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC;AAC7C,CAAC;AAZD,0DAYC;;AAED,kBAAe,uBAAuB,CAAC","file":"matchTransitionProperty.js","sourcesContent":["import removeVendorPrefix from \"./removeVendorPrefix\";\n\nexport function matchTransitionProperty(subject: string, property: string): boolean {\n  if (property === \"all\") {\n    return true;\n  }\n  const sub = removeVendorPrefix(subject);\n  const prop = removeVendorPrefix(property);\n  if (sub.length < prop.length) {\n    return false;\n  } else if (sub.length === prop.length) {\n    return sub === prop;\n  }\n  return sub.substr(0, prop.length) === prop;\n}\n\nexport default matchTransitionProperty;\n"]}