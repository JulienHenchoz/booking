{"version":3,"sources":["csstransition.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAE/B,yCAA+E;AAE/E,qCAAoC;AACpC,yEAAkG;AAClG,uEAAsE;AACtE,uEAA+F;AAC/F,yDAAwD;AACxD,+EAA2G;AAC3G,+DAA8D;AAC9D,yEAAkG;AAClG,2EAA0E;AAiD1E,IAAM,gBAAgB,GAAG,yBAAY,CAA8B;IACjE,SAAS,EAAE,KAAK;CACjB,CAAC,CAAC;AAEH,IAAM,eAAe,GAAG,sBAAS,CAC/B,QAAQ,EACR,kBAAkB,EAClB,cAAc,EACd,aAAa,EACb,aAAa,EACb,YAAY,EACZ,YAAY,EACZ,iBAAiB,EACjB,gBAAgB,EAChB,gBAAgB,EAChB,kBAAkB,EAClB,iBAAiB,EACjB,iBAAiB,EACjB,gBAAgB,EAChB,gBAAgB,EAChB,qBAAqB,EACrB,oBAAoB,EACpB,oBAAoB,EACpB,iBAAiB,EACjB,sBAAsB,EACtB,mBAAmB,EACnB,gBAAgB,EAChB,iBAAiB,EACjB,SAAS,EACT,YAAY,CACb,CAAC;AAEF,IAAM,OAAO,GAAG,qBAAQ,CACtB,2BAAc,CAAC,eAAe,CAAC,EAC/B,gBAAgB,EAChB,yCAAmB,EACnB,yCAAmB,CAAC,iBAAO,CAAC,EAC5B,uCAAkB,EAClB,uCAAkB,EAClB,yBAAW,EACX,+CAAsB,EACtB,+BAAc,EACd,2CAAoB,EACpB,eAAe,CAChB,CAAC;AAEW,QAAA,kBAAkB,GAC7B,UAAC,EAAsD;IAArD,IAAA,sBAAkB,EAAE,8BAAY,EAAE,sBAAQ,EAAE,4DAAO;IACnD,MAAM,CAAN,oBAAC,OAAO,aAAC,GAAG,EAAE,YAAY,IAAM,IAAI,IAAE,QAAQ,EAAE,QAAQ,IAAI,CAAA;CAAA,CAAC;AAEpD,QAAA,aAAa,GAAG,OAAO,CAAC,0BAAkB,CAAC,CAAC","file":"csstransition.js","sourcesContent":["import * as React from \"react\";\nimport { CSSProperties, ComponentClass, ReactNode, StatelessComponent, HTMLAttributes } from \"react\";\nimport { assemble, setDisplayName, omitProps, defaultProps } from \"reassemble\";\n\nimport { reducer } from \"./reducer\";\nimport { withTransitionState, WithTransitionStateProps } from \"./composables/withTransitionState\";\nimport { mergeWithBaseStyle } from \"./composables/mergeWithBaseStyle\";\nimport { withTransitionInfo, WithTransitionInfoProps } from \"./composables/withTransitionInfo\";\nimport { withTimeout } from \"./composables/withTimeout\";\nimport { withTransitionObserver, WithTransitionObserverProps } from \"./composables/withTransitionObserver\";\nimport { withWorkaround } from \"./composables/withWorkaround\";\nimport { withDOMNodeCallback, WithDOMNodeCallbackProps } from \"./composables/withDOMNodeCallback\";\nimport { preventPhantomEvents } from \"./composables/preventPhantomEvents\";\n\nexport type CSSTransitionDelay = number | { appear?: number; enter?: number; leave?: number };\nexport type CSSTransitionEventHandler = () => void;\n\nexport interface CSSTransitionProps\n  extends HTMLAttributes<any> {\n  component?: CSSTransitionInnerProps[\"component\"];\n  active?: boolean;\n  transitionAppear?: boolean;\n  transitionDelay?: CSSTransitionDelay;\n  onTransitionComplete?: CSSTransitionEventHandler;\n  children?: ReactNode;\n  defaultStyle?: CSSProperties;\n  activeStyle?: CSSProperties;\n  appearStyle?: CSSProperties;\n  enterStyle?: CSSProperties;\n  leaveStyle?: CSSProperties;\n  appearInitStyle?: CSSProperties;\n  enterInitStyle?: CSSProperties;\n  leaveInitStyle?: CSSProperties;\n  style?: CSSProperties;\n  defaultClassName?: string;\n  activeClassName?: string;\n  appearClassName?: string;\n  enterClassName?: string;\n  leaveClassName?: string;\n  appearInitClassName?: string;\n  enterInitClassName?: string;\n  leaveInitClassName?: string;\n  className?: string;\n}\n\nexport interface CSSTransitionInnerProps\n  extends HTMLAttributes<any> {\n  style?: CSSProperties;\n  component?: string | ComponentClass<any> | StatelessComponent<any>;\n  onTransitionBegin: any;\n  onTransitionComplete: any;\n  onDOMNodeRef?: (ref: Element) => void;\n}\n\ntype PropsUnion = CSSTransitionProps\n  & WithTransitionInfoProps\n  & WithTransitionStateProps\n  & WithDOMNodeCallbackProps\n  & WithTransitionObserverProps\n  & CSSTransitionInnerProps;\n\nconst withDefaultProps = defaultProps<Partial<CSSTransitionProps>>({\n  component: \"div\",\n});\n\nconst mapPropsToInner = omitProps<keyof PropsUnion>(\n  \"active\",\n  \"transitionAppear\",\n  \"defaultStyle\",\n  \"activeStyle\",\n  \"appearStyle\",\n  \"enterStyle\",\n  \"leaveStyle\",\n  \"appearInitStyle\",\n  \"enterInitStyle\",\n  \"leaveInitStyle\",\n  \"defaultClassName\",\n  \"activeClassName\",\n  \"appearClassName\",\n  \"enterClassName\",\n  \"leaveClassName\",\n  \"appearInitClassName\",\n  \"enterInitClassName\",\n  \"leaveInitClassName\",\n  \"transitionDelay\",\n  \"onTransitionComplete\",\n  \"onTransitionBegin\",\n  \"transitionInfo\",\n  \"transitionState\",\n  \"timeout\",\n  \"getDOMNode\",\n);\n\nconst enhance = assemble<CSSTransitionInnerProps, CSSTransitionProps>(\n  setDisplayName(\"CSSTransition\"),\n  withDefaultProps,\n  withDOMNodeCallback,\n  withTransitionState(reducer),\n  mergeWithBaseStyle,\n  withTransitionInfo,\n  withTimeout,\n  withTransitionObserver,\n  withWorkaround,\n  preventPhantomEvents,\n  mapPropsToInner,\n);\n\nexport const CSSTransitionInner: StatelessComponent<CSSTransitionInnerProps> =\n  ({component: Wrapper, onDOMNodeRef, children, ...rest }) =>\n    <Wrapper ref={onDOMNodeRef} {...rest} children={children} />;\n\nexport const CSSTransition = enhance(CSSTransitionInner);\n"]}