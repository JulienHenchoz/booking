{"version":3,"sources":["composables/withTransitionInfo.ts"],"names":[],"mappings":";AAAA,yCAAyE;AAKzE,4DAA4E;AAC5E,4EAA2E;AAC3E,4CAA2C;AAoB9B,QAAA,kBAAkB,GAC7B,oBAAO,CACL,yBAAY,CACV;IACE,IAAM,QAAQ,GAAG,iBAAO,CACtB,UAAC,IAAa,IAAK,OAAA,iDAAuB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAA/C,CAA+C,EAClE,UAAC,IAAa,IAAK,OAAA,IAAI,CAAC,SAAS,EAAd,CAAc,CAClC,CAAC;IACF,MAAM,CAAC;QACL,+BAA+B,EAAE,cAAM,OAAA,QAAQ,EAAR,CAAQ;KAChD,CAAC;AACJ,CAAC,CAAC,EACJ,sBAAS,CACP,UAAC,EAAgF;QAA/E,gBAAK,EAAE,wBAAS,EAAE,oCAAe,EAAE,0BAAU,EAAE,oEAA+B;IAC9E,EAAE,CAAC,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;QACjC,IAAI,MAAM,SAAoC,CAAC;QAC/C,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9B,MAAM,GAAG,iCAAe,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,IAAI,GAAG,UAAU,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,MAAM,GAAG,+BAA+B,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC;QACM,IAAA,iBAAK,EAAE,gBAAI,CAAW;QAC7B,MAAM,CAAC;YACL,cAAc,EAAE;gBACd,kBAAkB,EAAE,KAAK,CAAC,KAAK;gBAC/B,aAAa,EAAE,KAAK,CAAC,QAAQ;gBAC7B,YAAY,EAAE,IAAI,CAAC,QAAQ;gBAC3B,aAAa,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK;aAC1C;SACF,CAAC;IACJ,CAAC;IACD,MAAM,CAAC,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC;AAChC,CAAC,CAAC,EACJ,sBAAS,CACP,gBAAgB,CACjB,CACF,CAAC","file":"withTransitionInfo.js","sourcesContent":["import { withProps, withHandlers, isolate, integrate } from \"reassemble\";\n\nimport { CSSTransitionProps } from \"../csstransition\";\nimport { WithDOMNodeCallbackProps } from \"./withDOMNodeCallback\";\nimport { WithTransitionStateProps } from \"./withTransitionState\";\nimport { parseTransition, TransitionEntry } from \"../utils/parseTransition\";\nimport { parseComputedTransition } from \"../utils/parseComputedTransition\";\nimport { memoize } from \"../utils/memoize\";\n\nexport type WithTransitionInfoProps = {\n  transitionInfo?: {\n    firstPropertyDelay: number,\n    firstProperty: string,\n    lastProperty: string,\n    totalDuration: number,\n  },\n};\n\ntype PropsOut = WithTransitionInfoProps & {\n  parseComputedTransitionMemoized?: typeof parseComputedTransition,\n};\n\ntype PropsUnion = CSSTransitionProps\n  & WithDOMNodeCallbackProps\n  & WithTransitionStateProps\n  & PropsOut;\n\nexport const withTransitionInfo =\n  isolate(\n    withHandlers<PropsUnion, PropsOut>(\n      () => {\n        const memoized = memoize(\n          (node: Element) => parseComputedTransition(getComputedStyle(node)),\n          (node: Element) => node.className,\n        );\n        return {\n          parseComputedTransitionMemoized: () => memoized,\n        };\n      }),\n    withProps<PropsUnion, PropsOut>(\n      ({style, className, transitionState, getDOMNode, parseComputedTransitionMemoized}) => {\n        if (transitionState.inTransition) {\n          let parsed: [TransitionEntry, TransitionEntry];\n          if (style && style.transition) {\n            parsed = parseTransition(style.transition);\n          } else {\n            const node = getDOMNode();\n            node.className = className;\n            parsed = parseComputedTransitionMemoized(node);\n          }\n          const [first, last] = parsed;\n          return {\n            transitionInfo: {\n              firstPropertyDelay: first.delay,\n              firstProperty: first.property,\n              lastProperty: last.property,\n              totalDuration: last.duration + last.delay,\n            },\n          };\n        }\n        return { transitionInfo: {} };\n      }),\n    integrate<keyof WithTransitionInfoProps>(\n      \"transitionInfo\",\n    ),\n  );\n"]}