{"version":3,"sources":["composables/withWorkaround.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,6BAA+B;AAC/B,+BAA2E;AAC3E,yCAAyE;AAgB5D,QAAA,cAAc,GAAG,oBAAO,CACnC,yBAAY,CAAuB;IACjC,iBAAiB,EAAE,UAAC,EAGnB;YAFkB,+CAAa,EAC9B,wCAAiB;QACb,OAAA;YACJ,iBAAiB,CAAC,EAAE,YAAY,EAAE,aAAa,EAAS,CAAC,CAAC;QAC5D,CAAC;IAFK,CAEL;CACF,CAAC,EACF,sBAAS,CAAC,UACR,EAKC;QAJkB,yDAAkB,EACjB,8CAAY,EAC9B,wCAAiB,EACjB,sBAAQ;IAGV,IAAM,eAAe,GAAqC;QACxD,GAAG,EAAE,YAAY;QACjB,KAAK,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE;KACxB,CAAC;IACF,IAAM,UAAU,GAAG,wBAAsB,kBAAkB,OAAI,CAAC;IAChE,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACjB,eAAe,CAAC,eAAe,GAAG,iBAAiB,CAAC;QACpD,eAAe,CAAC,KAAK,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,YAAA,EAAE,gBAAgB,EAAE,UAAU,EAAE,CAAC;IACrF,CAAC;IACD,MAAM,CAAC;QACL,QAAQ,GAAG,yCAAU,eAAe,EAAK,SAAK,gBAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC1E,CAAC;AACJ,CAAC,CAAC,EACF,sBAAS,CACP,mBAAmB,EACnB,mBAAmB,CACpB,CACF,CAAC","file":"withWorkaround.js","sourcesContent":["import * as React from \"react\";\nimport { ReactNode, EventHandler, TransitionEvent, Children } from \"react\";\nimport { combine, withProps, withHandlers, omitProps } from \"reassemble\";\n\nimport { WithTransitionStateProps } from \"./withTransitionState\";\nimport { WithTransitionInfoProps } from \"./withTransitionInfo\";\nimport { WithTransitionObserverProps } from \"./withTransitionObserver\";\n\ntype PropsOut = {\n  workaroundHandler?: EventHandler<TransitionEvent<any>>,\n  children?: ReactNode;\n};\n\ntype PropsUnion = WithTransitionObserverProps\n  & WithTransitionStateProps\n  & WithTransitionInfoProps\n  & PropsOut;\n\nexport const withWorkaround = combine(\n  withHandlers<PropsUnion, PropsOut>({\n    workaroundHandler: ({\n      transitionInfo: {firstProperty},\n      onTransitionStart,\n    }) => () => {\n      onTransitionStart({ propertyName: firstProperty } as any);\n    },\n  }),\n  withProps((\n    {\n      transitionInfo: {firstPropertyDelay},\n      transitionState: {inTransition},\n      workaroundHandler,\n      children,\n    },\n  ) => {\n    const workaroundProps: React.HTMLProps<HTMLSpanElement> = {\n      key: \"workaround\",\n      style: { opacity: 0.9 },\n    };\n    const transition = `opacity 1ms linear ${firstPropertyDelay}ms`;\n    if (inTransition) {\n      workaroundProps.onTransitionEnd = workaroundHandler;\n      workaroundProps.style = { opacity: 1.0, transition, WebkitTransition: transition };\n    }\n    return {\n      children: [<span {...workaroundProps } />, ...Children.toArray(children)],\n    };\n  }),\n  omitProps<keyof PropsUnion>(\n    \"workaroundHandler\",\n    \"onTransitionStart\",\n  ),\n);\n"]}